name: Workflow

on:
  push:
    branches:
      - feat-devsecops

jobs:
  SAST:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Node.js 20
      uses: actions/setup-node@v2
      with:
        node-version: '20'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'
    - name: Install SonarCloud Scanner locally
      run: npm install sonar-scanner --save-dev
  
    - name: Run SonarCloud analysis
      uses: SonarSource/sonarcloud-github-action@master
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          with:
          args: >
            -Dsonar.projectKey=devsecops7_laboratorio-final
            -Dsonar.organization=devsecops7
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} 
            -Dsonar.branch.name=feat-devsecops


    - name: SonarQube Quality Gate Check
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
      with:
        scanMetadataReportFile: './.scannerwork/report-task.txt'
      

      



            
  #------------SCA-----------------

  SCA:
      needs: SAST
      runs-on: ubuntu-latest
      steps:
      
      - name: Checkout code
        uses: actions/checkout@v2      
  
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: '${{ github.event.repository.name }}'
          path: '.'
          format: 'HTML'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired
  
      - name: Upload Test result
        uses: actions/upload-artifact@master
        with:
          name: Depcheck report
          path: ${{github.workspace}}/reports
 #---------------DOCKER
  DockerBuild:
    needs: SCA
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker
        run: |
          docker build --tag cristinamatheuv/devsecops:latest .
      
      - name: Push Docker Image
        run: |
          docker push cristinamatheuv/devsecops:latest
      
      
      
      - name: Build Docker
        run: |
          docker build --tag cristinamatheuv/devsecops:latest .



#-------------------- Docker Scan ------------------------------------------

  DockerScan:
    needs: DockerBuild
    runs-on: ubuntu-latest
    steps:

    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull de la Imagen Docker
      run: | 
        docker pull dusankm/netflix-app:latest

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'cristinamatheuv/devsecops:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Push Docker
      run: |
        docker push cristinamatheuv/devsecops:latest
        
      
      
